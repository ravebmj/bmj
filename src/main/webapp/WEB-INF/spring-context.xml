<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	
	<!-- Message properties setting start -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basename" value="classpath:userinsights_messages" />
    	<property name="defaultEncoding" value="UTF-8"/>
	</bean>	
	<!-- Message properties setting end -->
	
	<context:component-scan base-package="org.bmj.userinsights.controller" />
	<context:component-scan base-package="org.bmj.userinsights.search.controller" />
	<context:component-scan base-package="org.bmj.userinsights.dashboard.controller" />	
	<context:component-scan base-package="org.bmj.userinsights.login.controller" />
	<context:component-scan base-package="org.bmj.userinsights.insight.controller" />
	<!-- Tiles changes start here  -->
		<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</value>
		</property>
	</bean>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean> 
	<!-- Tiles changes end here  -->
	
	<!-- class to set application context - start-->
	<bean id="contextApplicationContextProvider" class="org.bmj.userinsights.server.ApplicationContextProvider"/>
	<!-- class to set application context - end-->	
	
  <bean id="userInsightServiceRef" class="org.bmj.userinsights.service.UserInsightService"></bean>
  <bean id="refUserInsightDao" class="org.bmj.userinsights.dao.UserInsightDaoImpl">
		<property name="hibernateTemplate" ref="refHibernateTemplate"> </property>
	</bean> 
 	
 	<bean id="refUserInsightDaoImpl"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		scope="request">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="refUserInsightDao"/>
		</property> 
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="fetch*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	
	<bean id="dashboardServiceRef" class="org.bmj.userinsights.dashboard.service.DashboardService"></bean>
	<bean id="refDashboardDao" class="org.bmj.userinsights.dashboard.Dao.DashboardDao">
		<property name="hibernateTemplate" ref="refHibernateTemplate"> </property>
	</bean> 
 	
 	<bean id="refDashboardDaoImpl"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		scope="request">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="refDashboardDao"/>
		</property> 
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="fetch*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="insightServiceRef" class="org.bmj.userinsights.insight.service.InsightService"></bean>
	
	<bean id="refInsightDao" class="org.bmj.userinsights.insight.Dao.InsightDao">
		<property name="hibernateTemplate" ref="refHibernateTemplate"> </property>
	</bean> 
 	
 	<bean id="refInsightDaoImpl"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		scope="request">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="refInsightDao"/>
		</property> 
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="fetch*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	
	
	<bean id="searchServiceRef" class="org.bmj.userinsights.search.service.SearchService"></bean>
	
	<bean id="refSearchDao" class="org.bmj.userinsights.search.Dao.SearchDao">
		<property name="hibernateTemplate" ref="refHibernateTemplate"> </property>
	</bean> 
 	
 	<bean id="refSearchDaoImpl"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		scope="request">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="refSearchDao"/>
		</property> 
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="fetch*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	
	
	
	
	
	<!--  General ORM settings start -->			
			
 	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="mySessionFactory"/>
		</property>
	</bean>	
	
<!--     <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/UserInsightDB"/>
    </bean>	 -->
	
<!-- 		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:jboss/datasources/GCS_DEV"/>
	</bean> -->
<!--   	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://rank-srv-24:1433;databaseName=GCS_DEV" />
		<property name="username" value="test_user_solar2_sp8" />
		<property name="password" value="testsolar2@" />
	</bean>  --> 
	 <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
		<property name="url" value="jdbc:mysql://192.168.3.232:3306/mysql" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean> 
	
	
	
	<bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>

		<property name="mappingResources">
			<list>
				<value>org/bmj/userinsights/hibernate/Person.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/Tag.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/Project.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/Product.hbm.xml</value>
				
				<value>org/bmj/userinsights/hibernate/InsightWebLink.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightTag.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightProject.hbm.xml</value>
				
				<value>org/bmj/userinsights/hibernate/InsightProduct.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightMainUserType.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightGeographies.hbm.xml</value>
				
				<value>org/bmj/userinsights/hibernate/InsightFoundVia.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightDetails.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/InsightConfig.hbm.xml</value>
				
				<value>org/bmj/userinsights/hibernate/CodeListName.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/CodelistCodeDecode.hbm.xml</value>
				<value>org/bmj/userinsights/hibernate/ApplicationUser.hbm.xml</value>
				
				<value>org/bmj/userinsights/hibernate/AdminUser.hbm.xml</value>
				
				
				
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.default_schema">mysql</prop>
			</props>
		</property>
	</bean>	

	<bean id="refHibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<constructor-arg>
			<ref local="mySessionFactory"/>
		</constructor-arg>
	</bean>
	
	<!--  General ORM settings end -->
	<!-- resource like css/js/images access setting start -->
	<mvc:resources mapping="/resources/css/**" location="/resources/css/" /> 
	<mvc:resources mapping="/resources/js/**" location="/resources/js/" /> 
	<mvc:resources mapping="/resources/images/**" location="/resources/images/" /> 
	<mvc:annotation-driven />
	<!-- resource like css/js/images access setting end -->
	</beans>